; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Note: shell expansion ("~" or "$HOME") is not supported.  Environment
; variables can be expanded using this syntax: "%(ENV_HOME)s".

[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=<%= log %>/supervisord.log   ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB                ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10                   ; (num of main logfile rotation backups;default 10)
loglevel=info                        ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid         ; (supervisord pidfile;default supervisord.pid)
nodaemon=false                       ; (start in foreground if true;default false)
minfds=1024                          ; (min. avail startup file descriptors;default 1024)
minprocs=200                         ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

<%
app_names = []
engine.each_process do |name, process|
  1.upto(engine.formation[name]) do |num|
    port = engine.port_for(process, num)
    local_name = "#{name}-#{num}"
    full_name = "#{app}-#{local_name}"
    environment = engine.env.map do |key, value|
      "#{key}=\"#{shell_quote(value)}\""
    end
    app_names << local_name
-%>
[program:<%= local_name %>]
command=<%= "#{'newrelic-admin run-program ' if name == 'api'}#{process.command}" %>
; `supervisorctl update` will need autostart set to true
; to auto restart the program; otherwise, the program
; will stop after `supervisorctl update`.
autostart=true
autorestart=true
stopsignal=QUIT                  ; signal used to kill process (default TERM)
stdout_logfile=<%= log %>/<%= full_name %>.log
stderr_logfile=<%= log %>/<%= full_name %>.error.log
directory=<%= engine.root %>
environment=<%= environment.join(',') %>

<%
  end
end
-%>
[group:<%= app %>]
programs=<%= app_names.join(',') %>
